{"version":3,"sources":["webpack:///webpack/bootstrap a25fa84c215b259a3427","webpack:///./lib/Bubble_pop.js","webpack:///./lib/game.js","webpack:///./lib/bubble.js","webpack:///./lib/util.js","webpack:///./lib/spike.js","webpack:///./lib/game_view.js","webpack:///./lib/jewel.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;AChBD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA,kCAAiC;AACjC;AACA;AACA,MAAK;AACL,iCAAgC;AAChC;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,mBAAkB,SAAS;AAC3B;AACA;AACA;;AAEA,8BAA6B;AAC7B;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;;;;;;AClOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA,4BAA2B;AAC3B;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;AChCA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,mBAAmB;AAC/C,4BAA2B,uBAAuB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;;AAEA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a25fa84c215b259a3427\n **/","var Game = require(\"./game\");\nvar GameView = require(\"./game_view\");\nvar Bubble = require('./bubble');\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  var canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = 600;\n  canvasEl.height = 530;\n\n\n  var ctx = canvasEl.getContext(\"2d\");\n  // ctx.fillRect(25,25,60,60);\n  const gayme = new Game(ctx);\n  const gameView = new GameView(gayme, ctx);\n  // gameView.renderStart();\n  gameView.start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Bubble_pop.js\n ** module id = 0\n ** module chunks = 0\n **/","const Bubble = require('./bubble');\nconst Spike = require('./spike');\nconst Jewel = require('./jewel');\nconst Util = require('./util');\nconst GameView = require('./game_view');\n\nconst Game = function(ctx){\n  this.spikes = this.addSpikesTopBottom(ctx);\n  this.stars = [];\n  this.bubble = new Bubble(this);\n  this.spikesOnLeft = false;\n  this.sideSpikes = this.addSideSpikes(ctx, 2);\n  this.ctx = ctx;\n  this.jewel = new Jewel();\n  this.score = 0;\n  this.wallHits = 0;\n  this.over = false;\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, 600, 530);\n  // ctx.fillStyle = \"yellow\";\n  // ctx.fillRect(0, 0, 600, 530);\n\n  this.bubble.draw(ctx);\n\n  this.spikes.forEach( (spike) => {\n    spike.draw();\n  });\n  this.sideSpikes.forEach( (spike) => {\n    spike.draw();\n  });\n  this.jewel.draw(this.ctx);\n  this.drawScore();\n\n};\n\nGame.prototype.drawScore = function(){\n\n  this.ctx.fillStyle = '#ffc107';\n\n  this.ctx.beginPath();\n  this.ctx.arc(\n    300, 100, 50, 0, 2 * Math.PI, true\n  );\n\n  this.ctx.fill();\n\n  // const image = new Image();\n  // image.src = \"./assets/sun.png\";\n  // this.ctx.drawImage(image, 300, 335, 30, 30);\n\n  this.ctx.fillStyle = '#6f6f6f';\n  this.ctx.textAlign = 'center';\n  this.ctx.font = \"60px Sans Serif\";\n  this.ctx.fillText(this.wallHits, 300, 120);\n\n  // this.ctx.font = \"16px Arial\";\n  // this.ctx.fillStyle = \"black\";\n  // this.ctx.fillText(\"Score: \"+ this.score, 8, 20);\n  // this.ctx.fillText(\"Hits: \"+ this.wallHits, 70, 20);\n};\n\nGame.prototype.move = function(delta){\n  this.bubble.move(delta);\n};\n\nGame.prototype.step = function (delta) {\n  this.move(delta);\n  this.checkCollisions();\n  this.draw(this.ctx);\n};\n\nGame.prototype.checkCollisions = function(){\n  if(this.spikeCollisions(this.spikes) || this.spikeCollisions(this.sideSpikes)){\n    this.over = true;\n    this.gameOver();\n  }\n  this.wallCollisions();\n  this.jewelCollision();\n\n};\n\nGame.prototype.gameOver = function(){\n  this.what();\n};\n\nGame.prototype.jewelCollision = function(){\n  let distanceBetween = Util.dist(this.bubble.pos, this.jewel.pos);\n  if(distanceBetween < (this.bubble.radius + 20)){\n    console.log(\"jewel collision!!!\");\n    this.jewel.changePosition();\n    this.score++;\n  }\n};\n\nGame.prototype.wallCollisions = function(){\n  let num = this.num();\n  if(this.bubble.pos[0] > 580){\n    this.spikesOnLeft = true;\n    this.sideSpikes = this.addSideSpikes(this.ctx, num);\n    this.wallHits++;\n    console.log('right collision');\n    return true;\n  } else if(this.bubble.pos[0] < 20){\n    this.spikesOnLeft = false;\n    this.sideSpikes = this.addSideSpikes(this.ctx, num);\n    this.wallHits++;\n    console.log('left collision');\n    return true;\n  }\n  return false;\n};\n\nGame.prototype.num = function(){\n  if(this.wallHits <= 4){\n    return 2;\n  } else if(this.wallHits <= 8){\n    return 3;\n  } else if(this.wallHits <= 12){\n    return 4;\n  } else if(this.wallHits <= 16){\n    return 5;\n  } else if(this.wallHits <= 20){\n    return 6;\n  } else {\n    return 7;\n  }\n};\n\nGame.prototype.spikeCollisions = function(spikes){\n  let truth = false;\n  spikes.forEach( (spike) =>{\n    if(this.bubble.isCollidedWithSpike(spike)){\n      console.log(\"spike collision\");\n      truth = true;\n    }\n  });\n  return truth;\n};\n\nGame.prototype.wrap = function(pos){\n  if(pos[1] > 530){\n    pos[1] = pos[1] % 530;\n  } else if(pos[1] < 0){\n    pos[1] = 0;\n  }\n};\n\nGame.prototype.addSpikesTopBottom = function(ctx) {\n  let spikes = [];\n  const xVals = [0, 25, 50];\n  for (let i = 0; i < 560; i+=50){\n    let xBottomLeft = xVals[0] + i;\n    let xPoint = xVals[1] + i;\n    let xBottomRight = xVals[2] + i;\n\n  const bottomSpike = new Spike({game: this,\n    ctx: ctx,\n    vertices: [xBottomLeft, xPoint, xBottomRight, 530, 480, 530]\n    });\n    const topSpike = new Spike({game: this,\n      ctx: ctx,\n      vertices: [xBottomLeft, xPoint, xBottomRight, 0, 50, 0]\n      });\n    spikes.push(bottomSpike);\n    spikes.push(topSpike);\n  }\n  return spikes;\n};\n\nGame.prototype.allSpikes = function(ctx) {\n  let sideSpikes = [];\n  let xVals;\n  if(this.spikesOnLeft){\n    xVals = [0,50,0];\n  } else {\n    xVals = [600, 550, 600];\n  }\n  const yVals = [0, 25, 50];\n  for (let i = 40; i < 480; i+=50){\n    let yBottomLeft = yVals[0] + i;\n    let yPoint = yVals[1] + i;\n    let yBottomRight = yVals[2] + i;\n\n    const spike = new Spike({game: this,\n      ctx: ctx,\n      vertices: xVals.concat([yBottomLeft, yPoint, yBottomRight])\n      });\n    sideSpikes.push(spike);\n  }\n  return sideSpikes;\n};\n\nGame.prototype.addSideSpikes = function(ctx, num){\n  let allSideSpikes = this.allSpikes(ctx);\n  let sideSpikes = [];\n  allSideSpikes = shuffle(allSideSpikes);\n  for(let i = 0; i < num; i++){\n    sideSpikes.push(allSideSpikes[i]);\n  }\n\n  return sideSpikes;\n};\n\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","const Game = require('./game');\nconst Util = require('./util');\n\nvar DEFAULTS = {\n\tCOLOR: \"green\",\n\tRADIUS: 25,\n\tPOSITION: [300,265],\n\tVELOCITY: [4, -2.5]\n};\n\nconst Bubble = function(game){\n  this.pos = DEFAULTS.POSITION;\n  this.vel = DEFAULTS.VELOCITY;\n  this.radius = DEFAULTS.RADIUS;\n  this.color = DEFAULTS.COLOR;\n\tthis.game = game;\n\tthis.img = new Image();\n\tthis.img.src = \"./lib/assets/beach_ball1.png\";\n};\n\nBubble.prototype.draw = function(ctx){\n\t  // ctx.fillStyle = this.color;\n\t\tctx.drawImage(this.img, this.pos[0]-this.radius, this.pos[1]-this.radius, this.radius*2, this.radius*2 );\n\t  // ctx.beginPath();\n\t  // ctx.arc(\n\t  //   this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n\t  // );\n\t  // ctx.fill();\n};\n\nBubble.prototype.move = function(timeDelta){\n\tvar velocityScale = timeDelta / (1000/60),\n      offsetX = this.vel[0] * velocityScale,\n      offsetY = this.vel[1] * velocityScale;\n\tthis.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n\tthis.vel[1] = this.vel[1] + .5;\n\tthis.game.wrap(this.pos);\n\tthis.checkBounds();\n};\n\nBubble.prototype.checkBounds = function(){\n\tif(this.pos[0] > 580 || this.pos[0] < 20){\n    this.vel[0] = -this.vel[0];\n  }\n};\n\nBubble.prototype.powerUp = function(){\n\tthis.vel[1] = -10;\n};\n\nBubble.prototype.isCollidedWithSpike = function(spike){\n\tconst spikePos = [spike.vertices[1], spike.vertices[4]];\n\tconst distanceBetween = Util.dist(this.pos, spikePos);\n\tif(distanceBetween < DEFAULTS.RADIUS){\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nmodule.exports = Bubble;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bubble.js\n ** module id = 2\n ** module chunks = 0\n **/","var Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir: function (vec) {\n    var norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  dist: function (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Find the length of the vector.\n  norm: function (vec) {\n    return Util.dist([0, 0], vec);\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec : function (length) {\n    var deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale: function (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n  inherits: function (ChildClass, BaseClass) {\n    function Surrogate () { this.constructor = ChildClass };\n    Surrogate.prototype = BaseClass.prototype;\n    ChildClass.prototype = new Surrogate();\n  },\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 3\n ** module chunks = 0\n **/","const Spike = function(options){\n  this.vertices = options.vertices;\n  this.game = options.game;\n  this.ctx = options.ctx;\n}\n\nSpike.prototype.draw = function() {\n\n  const ctx = this.ctx;\n\n  ctx.fillStyle = \"white\";\n    ctx.beginPath();\n    ctx.moveTo(this.vertices[0],this.vertices[3]);\n    ctx.lineTo(this.vertices[1],this.vertices[4]);\n    ctx.lineTo(this.vertices[2],this.vertices[5]);\n    ctx.fill();\n};\n\nmodule.exports = Spike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/spike.js\n ** module id = 4\n ** module chunks = 0\n **/","const GameView = function(game,ctx){\n  this.ctx = ctx;\n  this.game = game;\n};\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers();\n  this.lastTime = 0;\n  //start the animation\n  this.requestId = requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.stop = function(){\n  window.cancelAnimationFrame(this.requestId);\n};\n\nGameView.prototype.animate = function(time){\n  var timeDelta = time - this.lastTime;\n\n  this.game.step(timeDelta);\n  // this.game.draw(this.ctx);\n  this.lastTime = time;\n\n  //every call to animate requests causes another call to animate\n  this.requestId = requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.bindKeyHandlers = function () {\n  const bubble = this.game.bubble;\n  key(\"space\", function () { bubble.powerUp() });\n  key(\"enter\", function() {console.log(\"nicetry\")});\n};\n\nGameView.prototype.renderStart = function(){\n  this.ctx.fillStyle = '#6f6f6f';\n  this.ctx.textAlign = 'center';\n  this.ctx.font = \"30px Sans Serif\";\n  this.ctx.fillText(\"welcome to my shitty game Press enter to start\", 300, 335);\n  const gameview = this;\n  key(\"enter\", function() {gameview.start()});\n}\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 5\n ** module chunks = 0\n **/","const Jewel = function(){\n  this.pos = this.findRandomPosition();\n  this.leftSide = false;\n  this.img = new Image();\n  this.img.src = \"./lib/assets/gold-coin.png\";\n};\n\nJewel.prototype.findRandomPosition = function(){\n  if(this.leftSide){\n    return [70, this.findRandomY()];\n  } else {\n    return [510, this.findRandomY()];\n  }\n};\n\nJewel.prototype.changePosition = function(){\n  if(this.leftSide){\n    this.leftSide = false;\n  } else {\n    this.leftSide = true;\n  }\n\n  this.pos = this.findRandomPosition();\n};\n\nJewel.prototype.draw = function(ctx){\n  // ctx.fillStyle = \"black\";\n\n  ctx.drawImage(this.img, this.pos[0]-20, this.pos[1]-20, 20*2, 20*2 );\n\n  // ctx.beginPath();\n  // ctx.arc(\n  //   this.pos[0], this.pos[1], 20, 0, 2 * Math.PI, true\n  // );\n  // ctx.fill();\n};\n\nJewel.prototype.findRandomY = function(){\n  return Math.random()*(460-70) + 70;\n};\n\nmodule.exports = Jewel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/jewel.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}